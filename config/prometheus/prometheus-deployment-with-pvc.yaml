apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: hive
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: hive
---
apiVersion: "v1"
kind: "PersistentVolumeClaim"
metadata:
  name: "prom-claim"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "2Gi"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: hive
  labels:
    app: prometheus
    purpose: example
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
      purpose: example
  template:
    metadata:
      labels:
        app: prometheus
        purpose: example
    spec:
      serviceAccountName: prometheus
      containers:
      - name: prometheus-example
        image: prom/prometheus
        volumeMounts:
          - name: config-volume
            mountPath: /etc/prometheus/prometheus.yml
            subPath: prometheus.yml
          - mountPath: /prometheus
            name: cache-volume
        ports:
        - containerPort: 9090
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config
        - name: "cache-volume"
          persistentVolumeClaim:
            claimName: "prom-claim"
---
kind: Service
apiVersion: v1
metadata:
  name: prometheus
  namespace: hive
spec:
  selector:
    app: prometheus
    purpose: example
  ports:
  - name: promui
    protocol: TCP
    port: 9090
    targetPort: 9090
